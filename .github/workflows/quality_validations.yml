name: Validação de Qualidade
run-name: ${{ github.actor }}

on:
  push:
    branches:
      - '*'
    paths:
        - 'force-app/**'
  pull_request:
    branches:
        - master
        - Staging
        - UAT
        - SIT
    paths:
        - 'force-app/**'
      
jobs:
  quality-Apex:
    name: Qualidade de codigo APEX
    runs-on: ubuntu-latest    
    permissions:
      checks: write
      contents: read 
    steps:
    
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Instalar o gerenciador de pacotes NPM
        run: |
          npm install

      - name: Instalar the SFDX CLI
        run: |
          npm install sfdx-cli --global

      - name: Instalar o SFDX CLI Scanner
        run: |
          echo 'y' | sfdx plugins:install @salesforce/sfdx-scanner
  
      - name: Rodar Scanner para Salesforce Apex
        id: review_code
        run: |
          sfdx scanner:run -f junit -t "force-app" -e "pmd" -c "Design,Best Practices,Code Style,Performance,Security" --outfile ./reports/scan-apex.xml
            
      - uses: actions/upload-artifact@v3
        with:
          name: cli-scan-report
          path: reports/scan-apex.xml

      - name: Requisicao para o time de segurança
        if: ${{ steps.review_code.outputs.critical_issues }}
        run: |
          echo 'achou issue'

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: reports/scan-apex.xml

  quality-LWC:
    name: Qualidade de codigo LWC
    runs-on: ubuntu-latest 
    permissions:
      checks: write
      contents: read 
    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Instalar o gerenciador de pacotes NPM
        run: |
          npm install

      - name: Instalar the SFDX CLI
        run: |
          npm install sfdx-cli --global

      - name: Instalar o SFDX CLI Scanner
        run: |
          echo 'y' | sfdx plugins:install @salesforce/sfdx-scanner

      - name: Rodar Scanner para Salesforce Apex
        run: |
          sfdx scanner:run -f junit -t "force-app" -e "eslint" -c "Design,Best Practices,Code Style,Performance,Security" --outfile ./reports/scan-lwc.xml
          
      - uses: actions/upload-artifact@v3
        with:
          name: cli-scan-report
          path: reports/scan-lwc.xml

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: 'reports/scan-lwc.xml' 

      #- name: Notificar usuários
      #  uses: jdcargile/ms-teams-notification@v1.3
      #  with:
      #    github-token: ${{ github.token }}
      #    ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
      #    notification-summary:  Execução da esteira
      #    notification-color: 17a2b8
      #    timezone: America/Sao_Paulo
                   
#           
#      - name: 'Run Apex tests'
#        run: sfdx force:apex:test:run -c -r human -d ./tests/apex -w 20 -u HubOrg
              
      #- name: 'Lint Lightning Web Components'
      #  run: |
      #    # npm run lint:lwc
      #    echo "Lint Lightning Web Components"
        
#      - name: Run the Jest coverage script
#        if: github.event.pull_request.merged == true
#        run: |
#          npm run test:unit:coverage
#          echo "Run the Jest coverage script"