name: Validação de Qualidade
run-name: ${{ github.actor }}

on:
  push:
    branches:
      - '*'
    paths:
        - 'force-app/**'
  pull_request:
    branches:
        - master
        - Staging
        - UAT
        - SIT
    paths:
        - 'force-app/**'
      
jobs:
  quality-chekcks:
    name: qualidade de código
    runs-on: ubuntu-latest      
    steps:
    
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Instalar o gerenciador de pacotes NPM
        run: |
          npm install
      - name: Instalar the SFDX CLI
        run: |
          npm install sfdx-cli --global
          sfdx force --help
            
      - name: Instalar o SFDX CLI Scanner
        run: |
          echo 'y' | sfdx plugins:install @salesforce/sfdx-scanner
          
      - name: Rodar Scanner para Salesforce Apex
        run: |
          sfdx scanner:run -f xml -t "force-app" -e "pmd" -c "Design,Best Practices,Code Style,Performance,Security" --outfile ./reports/scan-reports.xml
          
      - uses: actions/upload-artifact@v3
        with:
          name: cli-scan-report
          path: reports/scan-reports.xml

          
      #- name: Notificar usuários
      #  uses: jdcargile/ms-teams-notification@v1.3
      #  with:
      #    github-token: ${{ github.token }}
      #    ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
      #    notification-summary:  Execução da esteira
      #    notification-color: 17a2b8
      #   timezone: America/Sao_Paulo
          
#      - name: SonarCloud Scan
#        uses: sonarsource/sonarcloud-github-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
#      - name: Install the JEST Plugin
#        run: |
          # npm install
#          npm install @salesforce/sfdx-lwc-jest --save-dev
          
#      - name: 'Run Apex tests'
#        run: sfdx force:apex:test:run -c -r human -d ./tests/apex -w 20 -u HubOrg
        
#      - name: 'Delete coverage file (temporary step)'
#        run: rm ./tests/apex/test-result-707*-codecoverage.json
    
#      - name: 'Upload code coverage for Apex to Codecov.io'
#        uses: codecov/codecov-action@v3
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
#          flags: Apex
      
      #- name: 'Lint Lightning Web Components'
      #  run: |
      #    # npm run lint:lwc
      #    echo "Lint Lightning Web Components"
        
#      - name: Run the Jest coverage script
#        if: github.event.pull_request.merged == true
#        run: |
#          npm run test:unit:coverage
#          echo "Run the Jest coverage script"