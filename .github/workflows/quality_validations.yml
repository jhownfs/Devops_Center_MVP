name: Validação de Qualidade
run-name: ${{ github.actor }}

on:
  push:
    branches:
      - '*'
    paths:
        - 'force-app/**'
  pull_request:
    types: [opened, edited]
    branches:
        - main
        - Staging
        - UAT
        - SIT
    paths:
        - 'force-app/**'
      
jobs:
  quality-Apex:
    name: Qualidade APEX
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.apex_status.outputs.outcome }}  
    permissions:
      checks: write
      contents: read 

    steps:
    
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Instalar o gerenciador de pacotes NPM
        run: |
          npm install

      - name: Instalar the SFDX CLI
        run: |
          npm install sfdx-cli --global

      - name: Instalar o SFDX CLI Scanner
        run: |
          echo 'y' | sfdx plugins:install @salesforce/sfdx-scanner
  
      - name: Rodar Scanner para Salesforce Apex
        id: apex_status
        run: |
          sfdx scanner:run -f junit -s 3 --normalize-severity -t "force-app" -e "pmd" -c "Design,Best Practices,Code Style,Performance,Security" --outfile ./reports/scan-apex.xml
        continue-on-error: true

      - uses: actions/upload-artifact@v3
        with:
          name: cli-scan-report
          path: reports/scan-apex.xml

      - name: Publicar resultado dos testes sumarizado
        uses: mikepenz/action-junit-report@v4
        if: success() || failure()
        with:
          report_paths: 'reports/scan-apex.xml' 
          
      - name: Detalhes dos testes
        uses: test-summary/action@v2
        with:
           paths: reports/scan-apex.xml
  
  quality-LWC:  
    name: Qualidade LWC
    runs-on: ubuntu-latest  
    outputs:
      output1: ${{ steps.lwc_status.outputs.outcome }}   
    permissions:
      checks: write
      contents: read 

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Instalar o gerenciador de pacotes NPM
        run: |
          npm install

      - name: Instalar the SFDX CLI
        run: |
          npm install sfdx-cli --global

      - name: Instalar o SFDX CLI Scanner
        run: |
          echo 'y' | sfdx plugins:install @salesforce/sfdx-scanner

      - name: Validacao
        id: lwc_status
        run: |
            sfdx scanner:run -f junit -s 3 --normalize-severity -t "force-app" -e "eslint" --outfile ./reports/scan-lwc.xml
        continue-on-error: true

      - uses: actions/upload-artifact@v3
        with:
          name: cli-scan-report
          path: reports/scan-lwc.xml

      - name: Publicar resultado dos testes sumarizado
        uses: mikepenz/action-junit-report@v4
        if: success() || failure()
        with:
          report_paths: 'reports/scan-lwc.xml' 
            
      - name: Detalhes dos testes
        uses: test-summary/action@v2
        with:
          paths: reports/scan-lwc.xml   

  quality-FLOW:  
    name: Qualidade FLOW
    runs-on: ubuntu-latest  
    outputs:
      output1: ${{ steps.flw_status.outputs.outcome }}   
    permissions:
      checks: write
      contents: read 
      
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
                
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Instalar o gerenciador de pacotes NPM
        run: |
          npm install
      
      - name: Instalar the SFDX CLI
        run: |
          npm install sfdx-cli --global
      
      - name: Instalar o SFDX CLI Scanner
        run: |
          echo 'y' | sfdx plugins:install lightning-flow-scanner
      
      - name: Validacao Flow
        id: flw_status
        run: |
          sfdx flow:scan -d .\force-app\
        continue-on-error: true

      - name: Validacao msg
        run: |
          echo ${{ steps.flw_status.outcome }}
        

  comunicacoes:
    name: Notificações e alertas
    runs-on: ubuntu-latest
    needs: [quality-Apex, quality-LWC]
    steps:
      
    - uses: ravsamhq/notify-slack-action@v2
      if: ${{ needs.quality-Apex.outputs.output1 == 'failure' && needs.quality-LWC.outputs.output1 == 'failure'}}
      with:
          status: ${{ job.status }}
          token: ${{ github.token }}
          notification_title: "Vulnerabilidades encontradas no {workflow}"
          message_format: "{emoji} *{workflow}* Necessária ação do time de segurança, acesse para rejeitar/aprovar a PR"
          footer: "link do repositório <{repo_url}|{repo}> | <{workflow_url}>"
      env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_SLACK }}
              
    - uses: ravsamhq/notify-slack-action@v2
      if: always()
      with:
          status: ${{ job.status }}
          token: ${{ github.token }}
          notification_title: "{workflow} foi executado com {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} no <{repo_url}|{repo}>"
          footer: link do repositório <{repo_url}|{repo}> | <{workflow_url}>"
      env:
          SLACK_WEBHOOK_URL: ${{ secrets.RELEASE_TEAM_SLACK }}
